import { N, ON, P, A, C } from './base'
export default {
  /* *************************************一星*********************************** */
  /* ..............定位胆............... */
  /*
  定位胆
  C(n1, 1)+C(n2, 1)+C(n3, 1)+C(n4, 1)+C(n5, 1)
  */
  '1199:1' ({nsl}) {
    return Math.min(nsl[0], 1) + Math.min(nsl[1], 1) + Math.min(nsl[2], 1) + Math.min(nsl[3], 1) + Math.min(nsl[4], 1)
  },
  /* *************************************不定位*********************************** */
  /* ..............三星............... */
  /*
  前三一码
  C(n, 1)
  */
  '540:1' ({nsl}) {
    return Math.min(nsl[0], 3)
  },

  /*
  前三二码
  n>=2
  C(n, 2)
  */
  '541:1' ({nsl}) {
    return Math.min(C(nsl[0], 2), 3)
  },

  /*
  中三一码
  C(n, 1)
  */
  '538:1' ({nsl}) {
    return Math.min(nsl[0], 3)
  },

  /*
  中三二码
  n>=2
  C(n, 2)
  */
  '539:1' ({nsl}) {
    return Math.min(C(nsl[0], 2), 3)
  },

  /*
  后三一码
  C(n, 1)
  */
  '26:1' ({nsl}) {
    return Math.min(nsl[0], 3)
  },

  /*
  后三二码
  n>=2
  C(n, 2)
  */
  '27:1' ({nsl}) {
    return Math.min(C(nsl[0], 2), 3)
  },

  /* ..............四星............... */
  /*
  前四一码
  C(n, 1)
  */
  '1127:1' ({nsl}) {
    return Math.min(nsl[0], 4)
  },

  /*
  前四二码
  n>=2
  C(n, 2)
  */
  '1128:1' ({nsl}) {
    return Math.min(C(nsl[0], 2), 6)
  },

  /*
  后四一码
  C(n, 1)
  */
  '584:1' ({nsl}) {
    return Math.min(nsl[0], 4)
  },

  /*
  后四二码
  n>=2
  C(n, 2)
  */
  '586:1' ({nsl}) {
    return Math.min(C(nsl[0], 2), 6)
  },

  /* ..............五星............... */
  /*
  五星二码
  n>=2
  C(n, 2)
  */
  '588:1' ({nsl}) {
    return Math.min(C(nsl[0], 2), 10)
  },

  /*
  五星三码
  n>=3
  C(n, 3)
  */
  '590:1' ({nsl}) {
    return Math.min(C(nsl[0], 3), 10)
  },
  /* *************************************任选*********************************** */
  /* ..............任二............... */
  /*
  直选复式
  N1万，N2千，N3百，N4十，N5个 n>=1
  "N1 * N2 + N1 * N3 + N1 * N4 + N1 * N5 + N2 * N3 + N2 * N4 + N2 * N5 + N3 * N4 + N3 * N5 + N4 * N5h或者
  C(选择有号码的位置, 2), 再对这些位置上的号码个数相乘"
  */
  '410:1' ({nsl}) {
    let N1 = nsl[0] ? 1 : 0
    let N2 = nsl[1] ? 1 : 0
    let N3 = nsl[2] ? 1 : 0
    let N4 = nsl[3] ? 1 : 0
    let N5 = nsl[4] ? 1 : 0
    return C(A([N1, N2, N3, N4, N5]), 2)
  },

  /*
  直选单式
  N录入的号码个数，p位置选择的个数 C(p, 2) * N
  */
  '410:0' ({value, psl}) {
    return C(psl, 2) * (N(value, 2).length ? 1 : 0)
  },

  /*
  组选复式
  p位置选择的个数，n选择的号码个数 C(p, 2) * C(n, 2)
  */
  '412:1' ({nsl, psl}) {
    return C(psl, 2) * (C(nsl[0], 2) ? 1 : 0)
  },

  /*
  组选单式
  N录入的号码个数，p位置选择的个数 C(p, 2) * N
  */
  '412:0' ({psl, value}) {
    return C(psl, 2) * (N(value, 2).length ? 1 : 0)
  },

  /* ..............任三............... */
  /*
  直选复式
  N1万，N2千，N3百，N4十，N5个 n>=1
  "N1 * N2 * N3+N1 * N2 * N4+N1 * N2 * N5+N1 * N3 * N4+N1 * N3 * N5+N1 * N4 * N5+N2 * N3 * N4, +N2 * N3 * N5+N2 * N4 * N5+N3 * N4 * N5或者
  C(选择有号码的位置, 3), 再对这些位置上的号码个数相乘"
  */
  '417:1' ({nsl}) {
    let N1 = nsl[0] ? 1 : 0
    let N2 = nsl[1] ? 1 : 0
    let N3 = nsl[2] ? 1 : 0
    let N4 = nsl[3] ? 1 : 0
    let N5 = nsl[4] ? 1 : 0
    return C(A([N1, N2, N3, N4, N5]), 3)
  },

  /*
  直选单式
  N录入的号码个数，p位置选择的个数 C(p, 3) * N
  */
  '417:0' ({psl, value}) {
    return C(psl, 3) * (N(value, 3).length ? 1 : 0)
  },

  /*
  组三复式
  p位置选择的个数，n选择的号码个数 "C(p, 3) * C(n, 2)错误
  C(p, 3) * C(n, 2) * 2"
  */
  '418:1' ({nsl, psl}) {
    return C(psl, 3) * (C(nsl[0], 2) ? 1 : 0)
  },

  /*
  组三单式
  N录入的号码个数，p位置选择的个数 C(p, 3) * N
  */
  '418:0' ({psl, value}) {
    return C(psl, 3) * (N(value, 3, 2) ? 1 : 0)
  },

  /*
  组六复式
  p位置选择的个数，n选择的号码个数 C(p, 3) * C(n, 3)
  */
  '421:1' ({nsl, psl}) {
    return C(psl, 3) * (C(nsl[0], 3) ? 1 : 0)
  },
  /*
  组六单式
  N录入的号码个数，p位置选择的个数 C(p, 3) * N
  */
  '421:0' ({psl, value}) {
    return C(psl, 3) * (N(value, 3, 1) ? 1 : 0)
  },
  /*
  混合组选
  N录入的号码个数，p位置选择的个数 C(p, 3) * N
  */
  '907:0' ({psl, value}) {
    let wn = [0, C(psl, 3) * (ON(value, 3, 2).length ? 1 : 0)]
    if (N(value, 3, 2).length) {
      wn[0] = wn[1]
      wn[1] = 0
    }
    return wn
  },

  /* ..............任四............... */
  /*
  直选复式
  N1万，N2千，N3百，N4十，N5个 n>=1
  "N1 * N2 * N3 * N4+N1 * N2 * N3 * N5+N1 * N2 * N4 * N5+N1 * N3 * N4 * N5+N2 * N3 * N4 * N5或者
  C(选择有号码的位置, 4), 再对这些位置上的号码个数相乘"
  */
  '419:1' ({nsl}) {
    let N1 = nsl[0] ? 1 : 0
    let N2 = nsl[1] ? 1 : 0
    let N3 = nsl[2] ? 1 : 0
    let N4 = nsl[3] ? 1 : 0
    let N5 = nsl[4] ? 1 : 0
    return C(A([N1, N2, N3, N4, N5]), 4)
  },

  /*
  直选单式
  N录入的号码个数，p位置选择的个数 C(p, 4) * N
  */
  '419:0' ({psl, value}) {
    return C(psl, 4) * (N(value, 4).length ? 1 : 0)
  },

  /*
  组选24
  p位置选择的个数，n选择的号码个数 C(psl, 4) * C(n, 4)
  */
  '909:1' ({nsl, psl}) {
    return C(psl, 4) * (C(nsl[0], 4) ? 1 : 0)
  },

  /*
  组选12
  p位置选择的个数，m选择的二重号号码个数，n选择的单号号码个数，h重复的号码个数
  C(psl, 4) * (C(m, 1) * C(nsl[0], 2) - C(h, 1) * C(nsl[0]-1, 1))
  */
  '910:1' ({nsl, psl, r}) {
    return C(psl, 4) * (C(nsl[0], 1) * C(nsl[1], 2) - C(r, 1) * C(nsl[1] - 1, 1) ? 1 : 0)
  },

  /*
  组选6 p位置选择的个数，n选择的号码个数 C(psl, 4) * C(nsl[0], 2)
  */
  '911:1' ({nsl, psl}) {
    return C(psl, 4) * (C(nsl[0], 2) ? 1 : 0)
  },

  /*
  组选4 p位置选择的个数，n选择的号码个数，h重复的号码个数
  C(psl, 4) * (C(m, 1) * C(nsl[0], 1) - C(h, 1))
  */
  '912:1' ({nsl, psl, r}) {
    return C(psl, 4) * (C(nsl[0], 1) * C(nsl[1], 1) - C(r, 1) ? 1 : 0)
  },
  /* *************************************趣味*********************************** */
  /* ..............大小单双............... */
  /*
  前二大小单双
  N1 * N2
  */
  '37:1' ({nsl, ns}) {
    return Math.min(P(nsl), 4)
  },
  /*
  后二大小单双
  N1 * N2
  */
  '38:1' ({nsl}) {
    return Math.min(P(nsl), 4)
  },
  /* ..............猜遗漏............... */
  /*
  猜一
  n>=1
  C(n, 1)
  */
  '1129:1' ({nsl}) {
    return Math.min(C(nsl[0], 1), 9)
  },

  /*
  猜二
  n>=2
  C(nsl[0], 2)
  */
  '1130:1' ({nsl}) {
    return Math.min(C(nsl[0], 2), 36)
  },

  /*
  猜三
  n>=3
  C(nsl[0], 3)
  */
  '1131:1' ({nsl}) {
    return Math.min(C(nsl[0], 3), 84)
  },

  /*
  猜四
  n>=4
  C(nsl[0], 4)
  */
  '1132:1' ({nsl}) {
    return Math.min(C(nsl[0], 4), 126)
  },

  /*
  猜五
  n>=5
  C(nsl[0], 5)
  */
  '1133:1' ({nsl}) {
    return Math.min(C(nsl[0], 5), 126)
  },
  /* ..............五星特殊............... */

  /*
  五星特殊  一帆风顺  C(n,1)  n选择的号码个数 n>=1
  好事成双  C(n,1)  n选择的号码个数n>=1
  三星报喜  C(n,1)  n选择的号码个数n>=1
  四季发财  C(n,1)  n选择的号码个数n>=1
   */
  '550:1' ({nsl}) {
    return Math.min(C(nsl[0], 1), 5)
  },
  /*
  好事成双  C(n,1)  n选择的号码个数n>=1
   */
  '551:1' ({nsl}) {
    return Math.min(C(nsl[0], 1), 2)
  },
  /* *************************************五星*********************************** */
  /* ..............五星直选............... */
  /*
  直选组合
  5*N1*N2*N3*N4*N5
   */
  '380:1' ({nsl, PA}) {
    return 5 * P(nsl) ? [1, nsl[0], nsl[0] * nsl[1], nsl[0] * nsl[1] * nsl[2], nsl[0] * nsl[1] * nsl[2] * nsl[3]] : 1
  },
  /*
  混合组选
  N=输入的号码个数 N
  */
  '20:0' ({value}) {
    let wn = [0, 1]
    if (N(value, 3, 2).length) {
      wn[0] = wn[1]
      wn[1] = 0
    }
    return wn
  },
  '532:0' ({value}) {
    return this['20:0']({value})
  },
  '24:0' ({value}) {
    return this['20:0']({value})
  },
  /*
  特殊号
  C(n, 1)
  */
  '577:1' ({ns}) {
    let wn = [0, 0, 0]
    let m = Math.min.apply(Math, ns[0])
    if (m === 1) {
      wn[0] = 1
    } else if (m === 2) {
      wn[1] = 1
    } else {
      wn[2] = 1
    }
    return wn
  },
  /*
  特殊号
  C(n, 1)
  */
  '574:1' ({ns}) {
    return this['577:1']({ns})
  },
  /*
  特殊号
  C(n, 1)
  */
  '564:1' ({ns}) {
    return this['577:1']({ns})
  },
  '1200:1' ({ns}) {
    let wn = [0, 0]
    if (ns[0][0] === '3') {
      wn[0] = 1
    } else {
      wn[1] = 1
    }
    return wn
  },
  /*
    斗牛
  */
  '1201:1' ({ns}) {
    let wn = [0, 0]
    if (ns[0][0] === '11') {
      wn[1] = 1
    } else {
      wn[0] = 1
    }
    return wn
  },
  /*
  直选组合
  (N1*N2*N3*N4)*4 N1千，N2百，N3十，N4个n>=1
  */
  '1122:1' ({nsl}) {
    return 4 * P(nsl) ? [1, nsl[0], nsl[0] * nsl[1], nsl[0] * nsl[1] * nsl[2]] : 1
  },
  '384:1' ({nsl}) {
    return 4 * P(nsl) ? [1, nsl[0], nsl[0] * nsl[1], nsl[0] * nsl[1] * nsl[2]] : 1
  }
}