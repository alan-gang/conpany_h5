let commonRow = {
  // 名字
  n: '',
  // ????
  ncls: '',
  // 类型
  t: 'number',
  // 最小值
  min: 0,
  // 最大值
  max: 9,
  // length of number, ex. 1 => 01
  l: 1,
  // 至多可以选择多少个号码selected length
  sl: 0,
  // last selected item
  lsv: null,
  // 结构
  struct: '',
  // 按钮
  btns: ['全', '大', '小', '奇', '偶', '清'],
  // 待生成
  // values
  vs: null,
  // 所选的号的值v集
  vc: [],
  // 所选的号的名n集
  nc: [],
  // 所选的号的行名n集
  rnc: [],
}


let getCommonRow = (args = {}) => {
  return Object.assign({}, commonRow, args)
}

export default {
  /* *************************************前三*********************************** */
  /* ..............前三直选............... */
  /*
  直选复式
  N1 * N2 * N3
  */
  '1500:1' () {
    return [
      getCommonRow({n: '万位'}),
      getCommonRow({n: '千位'}),
      getCommonRow({n: '百位'}),
    ]
  },

  /*
  直选单式
  N
  */
  '1500:0' () {},

  /*
  直选和值
  分别对应各个和值数字，0-27 0:1, 1:3, 2:6, 3:10, 4:15, 5:21, 6:28, 7:36, 8:45, 9:55, 10:63, 11:69, 12:73, 13:75, 14:75, 15:73, 16:69, 17:63, 18:55, 19:45, 20:36, 21:28, 22:21, 23:15, 24:10, 25:6, 26:3, 27:1
  */
  '1501:1' () {
    return [
      getCommonRow({n: '和值', max: 27}),
    ]
  },

  /* ..............前三组选............... */
  /*
  组三复式
  N=选择号码个数 n>=2 C(n, 2) * 2
  */
  '1502:1' () {
    return [
      getCommonRow({n: '组三'}),
    ]
  },

  /*
  组三单式
  N=输入的号码个数 N
  */
  '1502:0' () {},

  /*
  组六复式
  N=选择号码个数 n>=3 C(n, 3)
  */
  '1503:1' () {
    return [
      getCommonRow({n: '组六'}),
    ]
  },

  /*
  组六单式
  N=输入的号码个数 N
  */
  '1503:0' () {},

  /*
  混合组选
  N=输入的号码个数 N
  */
  '1504:0' () {},

  /* ..............前三其他............... */
  /*
  组选和值(不含豹子号) 分别对应各个和值数字，0-26 1:1, 2:2, 3:2, 4:4, 5:5, 6:6, 7:8, 8:10, 9:11, 10:13, 11:14, 12:14, 13:15, 14:15, 15:14, 16:14, 17:13, 18:11, 19:10, 20:8, 21:6, 22:5, 23:4, 24:2, 25:2, 26:1
  */
  '1505:1' () {
    return [
      getCommonRow({n: '和值', min: 1, max: 26}),
    ]
  },
  /* *************************************二星*********************************** */
  /* ..............前二直选............... */
  /*
  直选复式
  N1万位，N2千位 N1 * N2
  */
  '1506:1' () {
    return [
      getCommonRow({n: '万位'}),
      getCommonRow({n: '千位'}),
    ]
  },

  /*
  直选单式
  输入注数
  N
  */
  '1506:0' () {},

  /* ..............前二组选............... */
  /*
  组选复式
  n>=2
  C(n, 2)
  */
  '1507:1' () {
    return [
      getCommonRow({n: '组选'}),
    ]
  },

  /*
  组选单式
  N
  */
  '1507:0' () {},
  /* ..............后二直选............... */
  /*
  直选复式
  同前二
  */
  '1508:1' () {
    return [
      getCommonRow({n: '十位'}),
      getCommonRow({n: '个位'}),
    ]
  },

  /*
  直选单式
  同前二
  N
  */
  '1508:0' () {},

  /* ..............后二组选............... */
  /*
  组选复式
  同前二
  */
  '1509:1' () {
    return [
      getCommonRow({n: '组选'}),
    ]
  },

  /*
  组选单式
  同前二
  */
  '1509:0' () {},

  /* *************************************一星*********************************** */
  /* ..............定位胆............... */
  /*
  定位胆
  C(n1, 1)+C(n2, 1)+C(n3, 1)+C(n4, 1)+C(n5, 1)
  */
  '1510:1' () {
    return [
      getCommonRow({n: '万位'}),
      getCommonRow({n: '千位'}),
      getCommonRow({n: '百位'}),
      getCommonRow({n: '十位'}),
      getCommonRow({n: '个位'}),
    ]
  },

  /* *************************************不定位*********************************** */
  /* ..............三星............... */
  /*
  前三一码
  C(n, 1)
  */
  '1511:1' () {
    return [
      getCommonRow({n: '不定位'}),
    ]
  },

  /*
  前三二码
  n>=2
  C(n, 2)
  */
  '1512:1' () {
    return [
      getCommonRow({n: '不定位'}),
    ]
  },
  /* *************************************趣味*********************************** */
  /* ..............大小单双............... */
  /*
  前二大小单双
  N1 * N2
  */
  '1513:1' () {
    return [
      getCommonRow({n: '万位', btns: [], vs: [{s: false, n: '大', v: '1'}, {s: false, n: '小', v: '2'}, {s: false, n: '单', v: '3'}, {s: false, n: '双', v: '4'}]}),
      getCommonRow({n: '千位', btns: [], vs: [{s: false, n: '大', v: '1'}, {s: false, n: '小', v: '2'}, {s: false, n: '单', v: '3'}, {s: false, n: '双', v: '4'}]}),
    ]
  },
  /*
  后二大小单双
  N1 * N2
  */
  '1514:1' () {
    return [
      getCommonRow({n: '十位', btns: [], vs: [{s: false, n: '大', v: '1'}, {s: false, n: '小', v: '2'}, {s: false, n: '单', v: '3'}, {s: false, n: '双', v: '4'}]}),
      getCommonRow({n: '个位', btns: [], vs: [{s: false, n: '大', v: '1'}, {s: false, n: '小', v: '2'}, {s: false, n: '单', v: '3'}, {s: false, n: '双', v: '4'}]}),
    ]
  },
}